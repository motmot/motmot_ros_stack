#!/usr/bin/env python
import re, sys, os

def strip_comments(buf):
    comment1_re = re.compile(r'[ \t]*/\*.*?\*/[ \t]*',  re.DOTALL)
    comment2_re = re.compile(r'[ \t]*//.*')

    buf = comment1_re.sub('',buf)
    buf = comment2_re.sub('',buf)
    buf = buf.strip()
    return buf

def strip_multinewlines(buf):
    newlines_re = re.compile(r'\n(\s*\n)+')
    buf = newlines_re.sub(r'\n',buf)
    buf = buf.strip()
    return buf

def c_escape(mystr):
    mystr = mystr.replace('"',r'\"')
    return mystr

in_fname = sys.argv[1]
out_c_fname = sys.argv[2]
assert out_c_fname.endswith('.c')
out_h_fname = out_c_fname[:-2] + '.h'

fd = open(in_fname,mode='r')
inbuf = fd.read()
fd.close()

outbuf = strip_multinewlines(strip_comments(inbuf))

varname = os.path.split(in_fname)[-1].replace('.','_')

fd = open(out_h_fname,mode='w')
fd.write("/* This file auto generated by shader2c.py. Do not edit. */\n")
vardef = "const char *%s = ("%varname
fd.write(vardef)

for i,line in enumerate(outbuf.split('\n')):
    if i!= 0:
        fd.write( ' '*len(vardef) )
    fd.write( '"%s\\n"\n'%c_escape(line))
fd.write( ');\n')

if 1:
    # create a target for CMake (this is sortof a hack...)
    fd = open(out_c_fname,mode='w')
    fd.write("/* This file intentionally blank. */\n")
    fd.close()
